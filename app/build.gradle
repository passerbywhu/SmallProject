apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.passerbywhu.smallproject"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${rootProject.ext.appcompatVersion}"
    compile "com.android.support:design:${rootProject.ext.appcompatVersion}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    //dagger
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"
    compile "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"
    compile "com.google.dagger:dagger-android:${rootProject.ext.daggerVersion}"
    compile "com.google.dagger:dagger-android-support:${rootProject.ext.daggerVersion}" // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:${rootProject.ext.daggerVersion}"

    //picasso
    compile "com.squareup.picasso:picasso:${rootProject.ext.picassoVersion}"

    //OkHttp
    compile "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okhttpInterceptorVersion}"
    compile "com.squareup.okhttp3:okhttp:${rootProject.ext.okhttpVersion}"

    //retrofit
    compile "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.retrofitVersion}"

    //RxBinding
    compile "com.jakewharton.rxbinding2:rxbinding:${rootProject.ext.rxbindingVersion}"
    compile "com.jakewharton.rxbinding2:rxbinding-support-v4:${rootProject.ext.rxbindingVersion}"
    compile "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:${rootProject.ext.rxbindingVersion}"
    compile "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:${rootProject.ext.rxbindingVersion}"

    //RxLifeCycle
    compile "com.trello.rxlifecycle2:rxlifecycle:${rootProject.ext.rxlifecycleVersion}"
    // If you want to bind to Android-specific lifecycles
    compile "com.trello.rxlifecycle2:rxlifecycle-android:${rootProject.ext.rxlifecycleVersion}"
    // If you want pre-written Activities and Fragments you can subclass as providers
    compile "com.trello.rxlifecycle2:rxlifecycle-components:${rootProject.ext.rxlifecycleVersion}"

    //flexbox
    compile "com.google.android:flexbox:${rootProject.ext.flexboxVersion}"
}
